// Telegram Bot Access Control
const allowedUsers = [
  "Abumalak_bot",   // Ø¨ÙˆØª Ø£Ø¨Ùˆ Ù…Ù„Ø§Ùƒ
  "a_aseri",         // Ø£Ø®Ùˆ Ø£Ø¨Ùˆ Ù…Ù„Ø§Ùƒ
  "Ibrahim_Asiri",   // Ø­Ø³Ø§Ø¨ Ø£Ø¨Ùˆ Ù…Ù„Ø§Ùƒ Ø§Ù„Ø´Ø®ØµÙŠ
];

// Function to check if a user is authorized
function isAuthorized(username) {
  return allowedUsers.includes(username);
}

// ØªØ­Ù„ÙŠÙ„ ØªÙ„Ù‚Ø§Ø¦ÙŠ Ø­Ø³Ø¨ Ø§Ù„Ø±Ø³Ø§Ù„Ø©
function extractStockSymbol(text) {
  const match = text.match(/(?:ØªØ­Ù„ÙŠÙ„|Ø­Ù„)?\s*Ø³Ù‡Ù…\s*([A-Za-z0-9]+)/i) || text.match(/^([A-Za-z0-9]{3,5})$/);
  return match ? match[1].toUpperCase() : null;
}

// Handle incoming message
function handleMessage(message) {
  const username = message.from.username;
  const text = message.text?.trim();

  if (!isAuthorized(username)) {
    return {
      text: `ðŸš« Ø¹Ø°Ø±Ù‹Ø§ ${username}ØŒ Ù„ÙŠØ³ Ù„Ø¯ÙŠÙƒ ØµÙ„Ø§Ø­ÙŠØ© Ø§Ø³ØªØ®Ø¯Ø§Ù… Ù‡Ø°Ø§ Ø§Ù„Ø¨ÙˆØª.`,
    };
  }

  const symbol = extractStockSymbol(text);
  if (symbol) {
    return {
      text: `ðŸ“Š ØªÙ… Ø§Ø³ØªÙ„Ø§Ù… Ø·Ù„Ø¨ ØªØ­Ù„ÙŠÙ„ Ø§Ù„Ø³Ù‡Ù…: ${symbol}.\nØ¬Ø§Ø±ÙŠ Ø¬Ù„Ø¨ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª...`,
    };
  }

  return {
    text: `Ù…Ø±Ø­Ø¨Ù‹Ø§ ${username}! âœ… ØªÙ… Ø§Ù„ØªØ­Ù‚Ù‚ Ù…Ù† ØµÙ„Ø§Ø­ÙŠØªÙƒ.\nØ§ÙƒØªØ¨ Ù„ÙŠ "ØªØ­Ù„ÙŠÙ„ Ø³Ù‡Ù… AAPL" Ø£Ùˆ Ø±Ù‚Ù… Ø§Ù„Ø³Ù‡Ù… Ù…Ø«Ù„ 2380.`,
  };
}

module.exports = handleMessage;
